version: '3.8'
services:
  received:
    networks:
      - new_networks
    build: ./received
    depends_on:
      redis:
        condition: service_started
      minio:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    volumes:
      - received:/datareceived
    
  send:
    networks:
      - new_networks
    build: ./send
    depends_on:
      redis:
        condition: service_started
      minio:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      received:
        condition: service_started
    volumes:
      - send:/datasend

  redis:   
    hostname: redisserver
    image: redis/redis-stack:latest
    ports:
      - 6379:6379
      - 8001:8001
    volumes:
      - redis:/data
    networks:
      - new_networks
  minio:
    hostname: minioserver
    image: quay.io/minio/minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    
    ports:
      - 9000:9000
      - 9001:9001 
    volumes:
      - minio:/dataminio
    networks:
      - new_networks
    command: server --console-address ":9001" /dataminio
  rabbitmq:
    hostname: rabbitmqserver
    image: rabbitmq:latest
    ports:
      - 5672:5672
      - 15672:15672  
    volumes:
      - rabbitmq:/datarabbitmq
    networks:
      - new_networks       
    healthcheck:
      test: "rabbitmq-diagnostics check_port_connectivity --formatter json | tail -1 | grep -q '\"result\":\"ok\"'"
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s
volumes:
  received:
  send:
  redis:
  minio:
  rabbitmq:
networks:
  new_networks:
    driver: bridge